openapi: 3.0.3
info:
  title: AutoGen Studio Groups API
  description: API for managing reusable component groups and test cases
  version: 1.0.0

servers:
  - url: /api/v1
    description: Main API server

paths:
  # ==================== GROUPS API ====================
  /groups/:
    get:
      summary: List all groups for a user
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: node_type
          in: query
          required: false
          schema:
            type: string
            enum: [agent, model, tool, termination, graph]
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: List of groups
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'

    post:
      summary: Create a new group (single node or multiple nodes with edges)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreate'
      responses:
        201:
          description: Group created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Group'

  /groups/{group_id}:
    get:
      summary: Get a specific group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: integer
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Group details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Group'

    put:
      summary: Update a group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdate'
      responses:
        200:
          description: Group updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Group'

    delete:
      summary: Delete a group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            type: integer
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Group deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string

  # ==================== TEST CASES API ====================
  /test-cases/:
    get:
      summary: List test cases
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: group_id
          in: query
          required: false
          schema:
            type: integer
        - name: graph_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        200:
          description: List of test cases
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestCase'

    post:
      summary: Create a new test case
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseCreate'
      responses:
        201:
          description: Test case created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/TestCase'

  /test-cases/{test_case_id}:
    get:
      summary: Get a specific test case
      parameters:
        - name: test_case_id
          in: path
          required: true
          schema:
            type: integer
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Test case details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/TestCase'

    put:
      summary: Update a test case
      parameters:
        - name: test_case_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseUpdate'
      responses:
        200:
          description: Test case updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/TestCase'

    delete:
      summary: Delete a test case
      parameters:
        - name: test_case_id
          in: path
          required: true
          schema:
            type: integer
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Test case deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string

  # ==================== TEST EXECUTION API ====================
  /test-cases/{test_case_id}/execute:
    post:
      summary: Execute a test case
      parameters:
        - name: test_case_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                timeout:
                  type: integer
                  default: 60
                context:
                  type: object
                  description: Additional context for test execution
      responses:
        200:
          description: Test execution result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestExecutionResult'

  /test-suites/{suite_id}/execute:
    post:
      summary: Execute all test cases in a suite
      parameters:
        - name: suite_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                timeout:
                  type: integer
                  default: 300
                parallel:
                  type: boolean
                  default: false
      responses:
        200:
          description: Test suite execution result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteExecutionResult'

components:
  schemas:
    Group:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: string
        name:
          type: string
        description:
          type: string
        nodes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Node ID within the group
              node_type:
                type: string
                enum: [agent, model, tool, termination, graph]
              node_config:
                type: object
                description: The actual node configuration (agent config, model config, etc.)
              label:
                type: string
              position:
                type: object
                properties:
                  x:
                    type: number
                  y:
                    type: number
              relative_position:
                type: object
                properties:
                  x:
                    type: number
                  y:
                    type: number
        edges:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              source_node_id:
                type: string
              target_node_id:
                type: string
              edge_type:
                type: string
              edge_data:
                type: object
        layout_info:
          type: object
          properties:
            bounds:
              type: object
              properties:
                x:
                  type: number
                y:
                  type: number
                width:
                  type: number
                height:
                  type: number
        tags:
          type: array
          items:
            type: string
        is_public:
          type: boolean
          default: false
        version:
          type: string
          default: "1.0.0"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    GroupCreate:
      type: object
      required: [user_id, name, nodes]
      properties:
        user_id:
          type: string
        name:
          type: string
        description:
          type: string
        nodes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              node_type:
                type: string
                enum: [agent, model, tool, termination, graph]
              node_config:
                type: object
              label:
                type: string
              position:
                type: object
              relative_position:
                type: object
        edges:
          type: array
          items:
            type: object
        layout_info:
          type: object
        tags:
          type: array
          items:
            type: string
        is_public:
          type: boolean

    GroupUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        nodes:
          type: array
          items:
            type: object
        edges:
          type: array
          items:
            type: object
        layout_info:
          type: object
        tags:
          type: array
          items:
            type: string
        is_public:
          type: boolean

    TestCase:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: string
        name:
          type: string
        description:
          type: string
        test_type:
          type: string
          enum: [llm_judge, performance, integration]
          default: llm_judge
        target_type:
          type: string
          enum: [group, graph]
        target_id:
          type: integer
        context:
          type: string
          description: Background context for the test scenario
        input_query:
          type: string
          description: User query or prompt being tested
        oracles:
          type: object
          properties:
            expected_examples:
              type: array
              items:
                type: string
            negative_examples:
              type: array
              items:
                type: string
            reference_answers:
              type: array
              items:
                type: string
          description: Expected and negative examples for LLM judge comparison
        scoring_rubrics:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              max_score:
                type: number
              criteria:
                type: array
                items:
                  type: string
              score_ranges:
                type: array
                items:
                  type: object
                  properties:
                    min_score:
                      type: number
                    max_score:
                      type: number
                    description:
                      type: string
          description: Criteria and scoring ranges for LLM judge
        judge_config:
          type: object
          properties:
            model:
              type: string
            temperature:
              type: number
            max_tokens:
              type: integer
            system_prompt:
              type: string
          description: LLM judge model and parameters
        timeout:
          type: integer
          default: 120
        retry_count:
          type: integer
          default: 1
        tags:
          type: array
          items:
            type: string
        is_active:
          type: boolean
          default: true
        latest_execution:
          $ref: '#/components/schemas/TestExecutionResult'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    TestCaseCreate:
      type: object
      required: [user_id, name, target_type, target_id, context, input_query, oracles, scoring_rubrics, judge_config]
      properties:
        user_id:
          type: string
        name:
          type: string
        description:
          type: string
        test_type:
          type: string
          enum: [llm_judge, performance, integration]
          default: llm_judge
        target_type:
          type: string
          enum: [group, graph]
        target_id:
          type: integer
        context:
          type: string
        input_query:
          type: string
        oracles:
          type: object
          properties:
            expected_examples:
              type: array
              items:
                type: string
            negative_examples:
              type: array
              items:
                type: string
            reference_answers:
              type: array
              items:
                type: string
        scoring_rubrics:
          type: array
          items:
            type: object
        judge_config:
          type: object
          properties:
            model:
              type: string
            temperature:
              type: number
            max_tokens:
              type: integer
            system_prompt:
              type: string
        timeout:
          type: integer
        retry_count:
          type: integer
        tags:
          type: array
          items:
            type: string
        is_active:
          type: boolean

    TestCaseUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        context:
          type: string
        input_query:
          type: string
        oracles:
          type: object
        scoring_rubrics:
          type: array
          items:
            type: object
        judge_config:
          type: object
        timeout:
          type: integer
        retry_count:
          type: integer
        tags:
          type: array
          items:
            type: string
        is_active:
          type: boolean

    TestExecutionResult:
      type: object
      properties:
        test_case_id:
          type: integer
        status:
          type: string
          enum: [completed, failed, error, timeout]
        execution_time:
          type: number
          description: Execution time in seconds
        target_output:
          type: object
          properties:
            response:
              type: string
            metadata:
              type: object
          description: Output from the target system being tested
        judge_results:
          type: object
          properties:
            overall_score:
              type: number
            scores_breakdown:
              type: array
              items:
                type: object
                properties:
                  rubric_name:
                    type: string
                  score:
                    type: number
                  max_score:
                    type: number
                  rationale:
                    type: string
            judge_rationale:
              type: string
            judge_confidence:
              type: number
              minimum: 0
              maximum: 1
          description: Results from LLM judge evaluation
        logs:
          type: array
          items:
            type: string
        error_message:
          type: string
        executed_at:
          type: string
          format: date-time

    TestSuiteExecutionResult:
      type: object
      properties:
        suite_id:
          type: integer
        total_tests:
          type: integer
        passed_tests:
          type: integer
        failed_tests:
          type: integer
        error_tests:
          type: integer
        total_execution_time:
          type: number
        test_results:
          type: array
          items:
            $ref: '#/components/schemas/TestExecutionResult'
        executed_at:
          type: string
          format: date-time
