/* Graph Builder Styles */

/* ReactFlow wrapper */
.reactflow-wrapper {
  @apply h-full w-full;
}

/* Connection handles */
.react-flow__handle {
  @apply !w-3 !h-3 !bg-gray-400 !border-gray-600 hover:!bg-accent transition-colors cursor-pointer;
}

.react-flow__handle.connecting {
  @apply !bg-accent;
}

/* Edge styles */
.react-flow__edge-path {
  @apply stroke-gray-400 stroke-2 hover:stroke-accent transition-colors;
}

.react-flow__edge.selected .react-flow__edge-path {
  @apply stroke-accent;
}

/* Bidirectional edge marker styling */
.react-flow__edge-bidirectional marker {
  @apply fill-gray-400;
}

.react-flow__edge-bidirectional:hover marker {
  @apply fill-accent;
}

.react-flow__edge-bidirectional.selected marker {
  @apply fill-accent;
}

/* Node selection */
.react-flow__node.selected {
  @apply shadow-lg;
}

/* Smooth transitions for nodes */
/* .react-flow__node {
  @apply transition-all duration-200;
} */

/* Connection line while dragging */
.react-flow__connection {
  @apply stroke-accent stroke-2;
}

.react-flow__connection-path {
  @apply stroke-accent stroke-2 fill-none;
}

/* Node hover effects */
.react-flow__node:hover {
  @apply z-10;
}

/* Minimap styling */
.react-flow__minimap {
  @apply bg-gray-100 rounded-lg shadow-md;
}

/* Background pattern */
.react-flow__background pattern circle {
  @apply fill-gray-300;
}

/* Controls */
.react-flow__controls {
  @apply shadow-md rounded-lg;
}

.react-flow__controls-button {
  @apply hover:bg-gray-100;
}

/* Attribution hiding (optional) */
.react-flow__attribution {
  @apply hidden;
}

/* Edge condition labels */
.edge-condition-label {
  @apply z-50;
}

.edge-condition-label button {
  @apply text-xs font-medium;
}

.edge-condition-label input {
  @apply focus:ring-2 focus:ring-blue-400 focus:ring-offset-1;
}

.edge-condition-label div[data-editing="true"] {
  @apply shadow-lg z-50;
}

/* Hover effects for condition labels */
.react-flow__edge:hover + .edge-condition-label,
.react-flow__edge.selected + .edge-condition-label {
  @apply opacity-100;
}

/* Animation for condition label appearance */
.edge-condition-label {
  @apply transition-opacity duration-200;
} 

/* Drag selection box styling */
.react-flow__selection {
  @apply border border-blue-400 bg-blue-50 bg-opacity-40 rounded-sm;
  transition: all 0.1s ease-out;
  backdrop-filter: blur(1px);
}

.react-flow__selection.dark {
  @apply border-blue-500 bg-blue-900 bg-opacity-30;
}

/* Enhanced selection feedback */
.react-flow__node.selectable:hover {
  @apply ring-2 ring-blue-300 ring-opacity-50;
}

.react-flow__edge.selectable:hover .react-flow__edge-path {
  @apply stroke-blue-400;
} 

/* Selection toolbar styling */
.react-flow__node-toolbar {
  @apply z-50;
}

/* Prevent toolbar from being dragged or panned */
.nodrag {
  pointer-events: all !important;
  user-select: none;
}

.nopan {
  cursor: default !important;
}

/* Animation for toolbar appearance */
.react-flow__node-toolbar > div {
  animation: toolbar-slide-down 0.2s ease-out;
}

@keyframes toolbar-slide-down {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Group Node Styles */
.group-node {
  @apply relative overflow-visible;
  min-width: 200px;
  min-height: 150px;
}

.group-node .group-header {
  @apply sticky top-0 z-10;
}

/* Resize control styling for group nodes */
.group-node .resize-control {
  @apply border-blue-400;
}

.group-node .resize-control .react-flow__resize-control-handle {
  @apply bg-blue-400 hover:bg-blue-500;
}

/* Group node selection */
.react-flow__node[data-type="group"].selected .group-node {
  @apply border-blue-500 shadow-lg;
}

/* Child node positioning within groups */
.react-flow__node[data-parentid] {
  @apply relative;
  z-index: 10;
}

/* Group node hover effects */
.group-node:hover {
  @apply border-blue-400 shadow-md;
}

/* Group node toolbar styling */
.react-flow__node[data-type="group"] .react-flow__node-toolbar {
  @apply bg-white rounded-lg shadow-lg border border-gray-200 p-1;
} 